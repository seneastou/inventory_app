// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid()) @db.Uuid
  name      String
  email     String     @unique
  role      Role
  isActive  Boolean    @default(true)
  products  Product[]  @relation("UserProducts")
  histories History[]
}

model Product {
  id          String     @id @default(uuid()) @db.Uuid
  name        String
  description String
  price       Float
  inStock     Boolean
  createdAt   DateTime   @default(now())
  user        User       @relation("UserProducts", fields: [userId], references: [id])
  userId      String     @db.Uuid
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  String     @db.Uuid
  // ❌ Plus de relation vers History ici
}

model Category {
  id       String     @id @default(uuid()) @db.Uuid
  name     String     @unique
  products Product[]
}

model History {
  id        String   @id @default(uuid()) @db.Uuid
  action    String
  quantity  Int?
  createdAt DateTime @default(now())
  productId String?  @db.Uuid  // ✅ Lien logique, sans contrainte FK
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid
}

enum Role {
  admin
  user
}